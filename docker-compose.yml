networks:
  main:
    name: ${PROJECT_TAG}-main

volumes:
  rabbitmq-data:
    name: ${PROJECT_TAG}-rabbitmq-data
  postgres-data:
    name: ${PROJECT_TAG}-postgres-data
  redis-data:
    name: ${PROJECT_TAG}-redis-data

services:
  nginx:
    build:
      context: ./infrastructure/nginx
    container_name: ${PROJECT_TAG}-nginx
    restart: always
    networks:
      - main
    expose:
      - ${NGINX_PORT}
    ports:
      - ${NGINX_PORT}:${NGINX_PORT}
      - ${NGINX_SSL_PORT}:${NGINX_SSL_PORT}

  rabbitmq:
    build:
      context: ./infrastructure/rabbitmq
    container_name: ${PROJECT_TAG}_rabbitmq
    restart: always
    networks:
      - main
    expose:
      - ${RABBITMQ_PORT}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  postgres:
    build:
      context: ./infrastructure/postgres
    container_name: ${PROJECT_TAG}-postgres
    restart: always
    networks:
      - main
    expose:
      - ${POSTGRES_PORT}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    build:
      context: ./infrastructure/redis
    container_name: ${PROJECT_TAG}-redis
    restart: always
    networks:
      - main
    expose:
      - ${REDIS_PORT}
    volumes:
      - redis-data:/data

  mailer:
    build:
      context: .
      dockerfile: ./apps/backend/mailer/Dockerfile
    container_name: ${PROJECT_TAG}-mailer
    restart: always
    depends_on:
      - rabbitmq
    networks:
      - main
    expose:
      - ${MAILER_PORT}

  api:
    build:
      context: .
      dockerfile: ./apps/backend/api/Dockerfile
    container_name: ${PROJECT_TAG}-api
    restart: always
    depends_on:
      - rabbitmq
      - postgres
      - redis
    networks:
      - main
    expose:
      - ${API_PORT}

  panel-react:
    build:
      context: .
      dockerfile: ./apps/frontend/panel-react/Dockerfile
    container_name: ${PROJECT_TAG}-panel-react
    restart: always
    networks:
      - main
    expose:
      - ${PANEL_REACT_PORT}
    environment:
      - HOSTNAME=${PANEL_REACT_HOST}
      - PORT=${PANEL_REACT_PORT}

  panel-vue:
    build:
      context: .
      dockerfile: ./apps/frontend/panel-vue/Dockerfile
    container_name: ${PROJECT_TAG}-panel-vue
    restart: always
    networks:
      - main
    expose:
      - ${PANEL_VUE_PORT}
    environment:
      - HOSTNAME=${PANEL_VUE_HOST}
      - PORT=${PANEL_VUE_PORT}
